# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = migrations
sqlalchemy.url = sqlite:///./app.db

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding --install-option '--with-timezones' to the
# pip or easy_install commands.
# timezone = UTC

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
revision_environment = true

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
sourceless = false

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# version location specification; This defaults
# to app/db/migrations/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/app/db/migrations/versions %(here)s/app/db/migrations/other_versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Leave this line as is if you want your `env.py` to be a module in the
# `migrations` package. If you want to place it elsewhere, change this.
# The path is relative to the directory that contains `alembic.ini`.
# script_location = app/db/migrations

# Add any section (e.g. your own custom section) for your own purposes.
# This section can be referenced in your `env.py` file.
# [my_section]
# my_option = my_value

[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks=black
# black.type=console_scripts
# black.entrypoint=black
# black.options=-l 79

# lint with flake8
# hooks=flake8
# flake8.type=console_scripts
# flake8.entrypoint=flake8
# flake8.options=--max-line-length=88

# format using "isort"
# hooks=isort
# isort.type=console_scripts
# isort.entrypoint=isort
# isort.options=--profile black --line-length 79
